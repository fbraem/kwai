[tool.poetry]
name = "kwai"
version = "0.2.0"
description = "KWAI Sport Club Management - API"
authors = ["Franky Braem <franky.braem@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.105.0"
uvicorn = {extras = ["standard"], version = "^0.23.0"}
mysql-connector-python = "^8.1.0"
sql-smith = "^1.1.1"
pyisemail = "^2.0.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
loguru = "^0.7.0"
jinja2 = "^3.1.2"
tomli = "^2.0.1"
pyjwt = "^2.7.0"
typer = {extras = ["all"], version = "^0.9.0"}
asyncmy = "^0.2.8"
cryptography = "^41.0.3"
markdown = "3.3.7"
pydantic= "2.5.2"
redis = "^5.0.1"
inject = "^5.2.0"
pendulum = "^3.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
black = {extras = ["d"], version = "^23.7.0"}
mypy = "^1.4.0"
ruff = "~0.1.5"
pytest-sugar = "^0.9.7"
httpx = "^0.23.3"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.1.0"
pre-commit = "^3.4.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.3"
mkdocstrings = "^0.22.0"
mkdocs-material = "^9.1.19"
mkdocs-monorepo-plugin = "^1.0.5"
mkdocstrings-python = "^1.2.1"
coverage-badge = "^1.1.0"

[tool.pytest.ini_options]
markers = [
    "db: Marks a test that needs a database",
    "mail: Marks a test that needs a mailer",
    "bus: Marks a test that needs a bus (redis)",
    "api: Marks a test that needs the fastapi server"
]
asyncio_mode = "auto"

[tool.coverage.report]
exclude_also = [
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]
[tool.mypy]

[[tool.mypy.overrides]]
module = "sql_smith.*"
ignore_missing_imports = true

[tool.ruff]
select = ["E", "W", "F", "C", "B", "D", "I", "N"]
fixable = ["I"]
ignore = ["D107", "D203", "D213", "D406", "D407", "E501", "N818", "B008"]
target-version = "py310"

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
