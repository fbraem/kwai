[tool.poetry]
name = "kwai"
version = "0.2.1"
description = "KWAI Sport Club Management - API"
authors = ["Franky Braem <franky.braem@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.6"
uvicorn = { extras = ["standard"], version = "^0.34.0" }
mysql-connector-python = "^9.1.0"
sql-smith = "^1.1.1"
python-multipart = "^0.0.20"
loguru = "^0.7.0"
jinja2 = "^3.1.2"
pyjwt = "^2.7.0"
typer = { extras = ["all"], version = "^0.15.1" }
asyncmy = "^0.2.8"
cryptography = "^44.0.0"
markdown = "3.7"
pydantic = "2.10.4"
redis = "^5.0.1"
inject = "^5.2.0"
pendulum = "^3.0.0"
async-lru = "^2.0.4"
bcrypt = "^4.1.2"
fastapi-sso = "^0.17.0"
email-validator = "^2.2.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
mypy = "^1.14.1"
ruff = "^0.11.2"
pytest-sugar = "^1.0.0"
httpx = "^0.28.1"
pytest-asyncio = "^0.21.1"
pytest-cov = "^6.0.0"
pre-commit = "^4.0.1"
pendulum = { extras = ["test"], version = "^3.0.0" }
deepdiff = "^6.7.1"
pytest-testmon = "^2.1.3"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocstrings = "^0.27.0"
mkdocs-material = "^9.5.44"
mkdocs-monorepo-plugin = "^1.1.0"
mkdocstrings-python = "^1.12.2"
coverage-badge = "^1.1.2"
griffe-fastapi = "0.1.5"
pymdown-extensions = "^10.15"
mkdocs-mermaid2-plugin = "^1.2.1"

[tool.pytest.ini_options]
markers = [
    "db: Marks a test that needs a database",
    "mail: Marks a test that needs a mailer",
    "bus: Marks a test that needs a bus (redis)",
    "api: Marks a test that needs the fastapi server"
]
asyncio_mode = "auto"

[tool.coverage.report]
exclude_also = [
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
[tool.mypy]
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = "sql_smith.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "deepdiff.*"
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "B", "D", "I", "N"]
fixable = ["I", "F"]
ignore = ["D107", "D203", "D213", "D406", "D407", "E501", "N818", "B008"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
order-by-type = true
lines-after-imports = 2
lines-between-types = 1

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
