name: pylint

on:
  push:
    paths:
      - backend/src/**
      - backend/tests/**

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      working-directory: backend/src
      run: |
        poetry install --no-interaction --no-root

  check_code:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Analysing the code with pylint
      working-directory: backend/src
      run: |
        pwd
        ls -lart
        poetry run pylint ./kwai

  check_tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Analysing the tests with pylint
      working-directory: backend/src
      run: |
        poetry run pylint ./tests --disable=redefined-outer-name
